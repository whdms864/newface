<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newface.mybatis.MemberMapper">

	
	<insert id="insert" parameterType="member">
		insert into member values(#{id},#{pwd},#{name},#{email},#{addr},#{birth},#{school},'회원',now())
	</insert>
	
	<insert id="hompyinsert" parameterType="hompy">
		insert into hompy values(0,'NewFace',#{id})
	</insert>
	<insert id="profile_insert" parameterType="int">
		insert into profile values(0,'행복','자기소개가 없습니다',now(),null,null,#{hompy_num})
	</insert>
	<select id="getinfo_type" resultType="member" parameterType="hashmap">
		select * from member
		where type=#{type} and (id like concat('%',#{text},'%') or name like concat('%',#{text},'%'))
		order by id,regdate limit #{startRow},#{endRow}
	</select>
	<select id="listall" resultType="member" parameterType="hashmap">
		select * from member
		where id like concat('%',#{text},'%') or name like concat('%',#{text},'%')
		order by id,regdate limit #{startRow},#{endRow}
	</select>
	<select id="getinfo" resultType="member" parameterType="string">
		select * from member
		where id=#{value}
	</select>
	<select id="count" resultType="int" parameterType="hashmap">
		select coalesce(count(id),0) from member where id like concat('%',#{text},'%') or name like concat('%',#{text},'%')
	</select>
	<select id="count_type" resultType="int" parameterType="hashmap">
		select coalesce(count(id),0) from member where type=#{type} and 
		(id like concat('%',#{text},'%') or name like concat('%',#{text},'%'))
	</select>
	<select id="getadmin" resultType="admin" parameterType="string">
		select * from admin
		where id=#{value}
	</select>
	<select id="hompy_num" parameterType="string" resultType="int">
		select hompy_num from hompy where id=#{value}
	</select>
	
	<insert id="miniroom" parameterType="int">
		insert into miniroom values(0,'미니룸',#{value})
	</insert>
	<select id="isMember" resultType="member" parameterType="hashmap">
		select * from member
		where id=#{loginid} and pwd=#{loginpwd} and type='회원'
	</select>
	
	<select id="isAdmin" resultType="admin" parameterType="hashmap">
		select * from admin
		where id=#{loginid} and pwd=#{loginpwd} 
	</select>
	<insert id="setup_insert" parameterType="int">
		insert into setup values(0,#{value},1,1,1)
	</insert>
	
	
	<select id="mypage" resultType="member" parameterType="string">
		select id,pwd,name,email,addr,birth,school,date_format(regdate,'%Y-%m-%d') regdate from member where id=#{loginid}
	</select>
	
	<update id="update" parameterType="member">
		update member 
		set pwd=#{pwd}, name=#{name}, email=#{email}, addr=#{addr}, birth=#{birth}, school=#{school} 
		where id=#{id}     
	</update>
	
	<update id="leave" parameterType="member">
		update member set type='탈퇴' where id=#{id}
	</update>
	<select id="today_today" parameterType="int" resultType="int">
		select ifnull(count(id),0) from today where hompy_num=#{value} and regdate=date_format(now(),'%Y-%c-%e')
	</select>
	<select id="searchid" resultType="string" parameterType="hashmap">
		select id from member
		where name=#{name} and email=#{email}
	</select>
	
	<select id="serachpwd" resultType="string" parameterType="hashmap">
		select pwd from member
		where id=#{id} and email=#{email}
	</select>
	<update id="update_type" parameterType="hashmap">
		update member 
		set type=#{type}  
		where id=#{id}     
	</update>
	<insert id="diary_folder_insert" parameterType="int">
		insert into diary_folder values(0,'기본폴더',now(),#{value})
	</insert>
	<insert id="photo_folder_insert" parameterType="int">
		insert into photo_folder values(0,'기본폴더',now(),#{value})
	</insert>

	<select id="guest_now" parameterType="int" resultType="int">
		select count(guest_num) from guestbook where hompy_num=#{hompy_num} and date_format(regdate,"%Y-%c-%d")=date_format(now(),"%Y-%c-%d")
	</select>
	<select id="iu_request_list" parameterType="string" resultType="int">
		select count(iu_num) from iu where i_id=#{value} and u_name='신청'
	</select>
	<select id="fsearch" resultType="flist" parameterType="hashmap">
		select m.id, m.name, m.school, m.addr, m.email, p.save_name
		from member m join hompy h
		on m.id=h.id
		join profile p
		on h.hompy_num=p.hompy_num
		where m.type!='탈퇴' and (m.id like concat('%',#{text},'%') or m.name like concat('%',#{text},'%') or m.school like concat('%',#{text},'%') or m.addr like concat('%',#{text},'%')) 
		order by m.id,m.regdate limit #{startRow},#{endRow}
	</select>
	<select id="fsearch_count" resultType="int" parameterType="hashmap">
		select coalesce(count(m.id),0) 
		from member m join hompy h
		on m.id=h.id
		join profile p
		on h.hompy_num=p.hompy_num
		where m.type!='탈퇴' and m.id like concat('%',#{text},'%') or m.name like concat('%',#{text},'%') or m.school like concat('%',#{text},'%') or m.addr like concat('%',#{text},'%')
	</select>
</mapper>  