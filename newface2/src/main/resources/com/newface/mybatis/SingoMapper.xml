<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newface.mybatis.SingoMapper">
	<insert id="p_insert" parameterType="p_singo">
		insert into photo_singo values(0,#{content},#{photo_num},#{id})
	</insert>
	<insert id="d_insert" parameterType="d_singo">
		insert into diary_singo values(0,#{content},#{diary_num},#{id})
	</insert>
	<delete id="p_delete" parameterType="hashmap">
		delete from photo_singo where photo_num=#{photo_num} and id=#{id}
	</delete>
	<delete id="d_delete" parameterType="hashmap">
		delete from diary_singo where diary_num=#{diary_num} and id=#{id}
	</delete>
	<delete id="p_delete_all" parameterType="int">
		delete from photo_singo where photo_num=#{value}
	</delete>
	<delete id="d_delete_all" parameterType="int">
		delete from diary_singo where diary_num=#{value}
	</delete>
	<select id="p_list" resultType="p_singo" parameterType="hashmap">
		select * from photo_singo where photo_num=#{photo_num} and id=#{id}
	</select>
	<select id="d_list" resultType="d_singo" parameterType="hashmap">
		select * from diary_singo where diary_num=#{diary_num} and id=#{id}
	</select>
	<update id="p_update" parameterType="hashmap">
		update photo set singo=#{singo} where photo_num=#{photo_num}
	</update>
	<update id="d_update" parameterType="hashmap">
		update diary set singo=#{singo} where diary_num=#{diary_num}
	</update>
	<update id="p_blind" parameterType="hashmap">
		update photo set blind=#{blind} where photo_num=#{photo_num}
	</update>
	<update id="d_blind" parameterType="hashmap">
		update diary set blind=#{blind} where diary_num=#{diary_num}
	</update>
	<update id="ps_update" parameterType="hashmap">
		update photo_singo set content=#{content} where photo_num=#{photo_num}
	</update>
	<update id="ds_update" parameterType="hashmap">
		update diary_singo set content=#{content} where diary_num=#{diary_num}
	</update>
	<select id="singo_list" resultType="singo" parameterType="hashmap">
		select count(*) cnt,content,num2,tb from(
		select ps_num num,content,photo_num num2,id,'사진첩' tb from photo_singo
		union
		select diary_singo_num num,content,diary_num num2,id,'다이어리' tb from diary_singo)a
		group by a.num2
		order by cnt desc 
		limit #{startRow},#{endRow}
	</select>
	<select id="getcount" resultType="int">
		select count(*) cnt from
		(select * from photo_singo
		union
		select * from diary_singo) a
	</select>
	<select id="p_getinfo" resultType="p_singo" parameterType="int">
		select * from photo_singo where photo_num=#{value}
	</select>
	<select id="d_getinfo" resultType="d_singo" parameterType="int">
		select * from diary_singo where diary_num=#{value}
	</select>
	<select id="getinfo" resultType="singo_get" parameterType="hashmap">
		select num,title,content,love,singo,blind,DATE_FORMAT(regdate, "%Y년 %m월 %d일 %H:%i") regdate,id,tb from 
		(select p.photo_num num,p.title title,p.content content,p.love love,p.singo singo,p.blind blind,p.regdate regdate,h.id id,'사진첩' tb
		from hompy h
		join photo_folder pf
		on pf.hompy_num = h.hompy_num
		join photo p
		on pf.photo_folder_num = p.photo_folder_num
		union
		select d.diary_num num,d.title title,d.content content,d.love love,d.singo singo,d.blind blind,d.regdate regdate,h.id id,'다이어리' tb
		from hompy h
		join diary_folder df
		on df.hompy_num = h.hompy_num
		join diary d
		on df.diary_folder_num = d.diary_folder_num
		) a
		
		where a.num=#{num} and a.tb=#{tb};
	</select>
</mapper>  